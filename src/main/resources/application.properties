kafka.bootstrapAddress=localhost:29092
#message.topic.name=baeldung
message.topic.name=my-topic1
greeting.topic.name=greeting
filtered.topic.name=filtered
partitioned.topic.name=partitioned



######## streaming
spring.kafka.bootstrap-servers=localhost:29092
spring.application.name: visits-aggreagator-v5
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
#spring.kafka.streams.properties.default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.kafka.streams.properties.default.value.serde=com.baeldung.spring.kafka.streaming.PageViewSerde
spring.kafka.streams.properties.replication.factor=1

# this mean not to cache and to flush results as soon as possible
spring.kafka.streams.properties.commit.interval.ms=0
spring.kafka.streams.properties.cache.max.bytes.buffering=0
#spring.kafka.streams.properties.commit.interval.ms=60000
#spring.kafka.streams.properties.cache.max.bytes.buffering=10485760

#spring.kafka.streams.properties.default.timestamp.extractor=com.tamediadigital.data.engineerstreamng.VisitTimestampExtractor




##### simple props for simple consumer
simple.kafka.bootstrap-servers=localhost:29092
simple.topic.name=visits-2
simple.kafka.publish-topic-name=count-per-minute